openapi: 3.0.3
x-stoplight:
  id: kq1kfjpi855sv
info:
  title: eBike Profile API
  version: 1.2.1
  description: 'With eBike Profile API, riders gain insights on their eBike data like detailed specifications, configurations and changes.'
  contact:
    name: Bosch eBike Systems Partner Portal
    url: 'https://portal.bosch-ebike.com/services/cloud-api/help'
    email: partnerportal.feedback@de.bosch.com
servers:
  - url: 'https://api.bosch-ebike.com/bike-profile/v1'
    description: Production
paths:
  /bikes:
    get:
      summary: List all eBikes
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  bikes:
                    type: array
                    items:
                      $ref: '#/components/schemas/Bike'
              examples:
                example:
                  value:
                    bikes:
                      - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        createdAt: '2022-03-30T14:15:22Z'
                        serviceDue:
                          date: '2023-06-30T14:15:22Z'
                          odometer: 2000
                        driveUnit:
                          productName: Drive Unit
                          serialNumber: 17509-0059-99-300-00-0000
                          partNumber: EB1110000A-50
                          odometer: 1677
                        remoteControl:
                          productName: LED Remote
                          serialNumber: 14026-0289-01-A10-00-0000
                          partNumber: EB1310000E
                        batteries:
                          - productName: PowerTube 750
                            serialNumber: 17331-0067-02-797-00-0016
                            partNumber: EB1210000X
                            chargeCycles:
                              total: 2.5
                              onBike: 1.6
                              offBike: 0.9
                        antiLockBrakeSystems:
                          - productName: eBike ABS
                            serialNumber: 12345-6789-12-345-11-1111
                            partNumber: '0265262653'
                        connectModule:
                          productName: ConnectModule
                          serialNumber: 17918-0052-01-368-00-0000
                          partNumber: EB1310000B
                        headUnit:
                          productName: Kiox 300
                          serialNumber: 13916-0056-01-A06-00-0000
                          partNumber: EB13100003
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      operationId: get-bikes
      description: Returns a list of eBikes associated with a user.
      parameters: []
      tags:
        - Bikes
      x-stoplight:
        id: cxbhotxri8142
    parameters: []
  '/bikes/{bikeId}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: bikeId
        in: path
        required: true
    get:
      summary: Retrieve a single eBike
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
            ETag:
              schema:
                type: string
              description: Calculated value to check with the `If-None-Match` request header  if the resource has changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bike'
              examples:
                example:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    createdAt: '2022-03-30T14:15:22Z'
                    serviceDue:
                      date: '2023-06-30T14:15:22Z'
                      odoemeter: 2000
                    driveUnit:
                      productName: Drive Unit
                      serialNumber: 17509-0059-99-300-00-0000
                      partNumber: EB1110000A-50
                      odometer: 1677
                    remoteControl:
                      productName: LED Remote
                      serialNumber: 14026-0289-01-A10-00-0000
                      partNumber: EB1310000E
                    batteries:
                      - productName: PowerTube 750
                        serialNumber: 17331-0067-02-797-00-0016
                        partNumber: EB1210000X
                        chargeCycles:
                          total: 2.5
                          onBike: 1.6
                          offBike: 0.9
                    antiLockBrakeSystems:
                      - productName: eBike ABS
                        serialNumber: 12345-6789-12-345-11-1111
                        partNumber: '0265262653'
                    connectModule:
                      productName: ConnectModule
                      serialNumber: 17918-0052-01-368-00-0000
                      partNumber: EB1310000B
                    headUnit:
                      productName: Kiox 300
                      serialNumber: 13916-0056-01-A06-00-0000
                      partNumber: EB13100003
        '304':
          description: Not Modified
          headers:
            ETag:
              schema:
                type: string
              description: Calculated value to check with the `If-None-Match` request header  if the resource has changed.
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              examples:
                validation-error:
                  value:
                    detail: 'parameter ''bikeId'' in path has an error: invalid UUID length: 5'
                    requestId: d4af4b7c-c7db-424e-80a7-a84557d53001
                    type: /validation-error
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              examples:
                resource-not-found:
                  value:
                    detail: requested resource was not found
                    requestId: 7a019a28-cf6d-49ea-8b59-50626f51e50e
                    type: /resource-error/not-found
        '500':
          $ref: '#/components/responses/500'
      operationId: get-bike-by-id
      description: |-
        Returns data of a single eBike associated with a user.

        This endpoint supports `ETag` (entity tag), a HTTP response header, to check if the resource has changed.
        ETags can be used by API clients for caching and conditional requests to save bandwidth by using the `If-None-Match` HTTP request header.
      parameters:
        - schema:
            type: string
          in: header
          name: If-None-Match
          description: 'Use the value of the previously received ETag response header to check if the resource has changed. If so, you get the HTTP response status `200`, the current version of the resource and a new ETag response header. In case the resource has not changed you just get the HTTP response status `304`.'
      tags:
        - Bikes
      x-stoplight:
        id: 84hlygkv5x8oq
  /bike-pass-health:
    get:
      summary: health
      tags:
        - Health
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - UP
                      - WARN
                required:
                  - status
          headers:
            Cache-Control:
              schema:
                type: string
                enum:
                  - no-cache
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - DOWN
                required:
                  - status
          headers:
            Cache-Control:
              schema:
                type: string
                enum:
                  - no-cache
      operationId: get-health
      security: []
      x-internal: true
      description: Health status of the bike pass service. Indicates whether the service status is acceptable or not.
      x-stoplight:
        id: iw3hz0kai6uwb
    parameters: []
components:
  schemas:
    Bike:
      title: Bike
      type: object
      description: The Bike contains eBike master data and information about its components.
      properties:
        id:
          type: string
          description: Bosch unique eBike ID.
          format: uuid
        oemId:
          type: string
          description: OEM unique eBike ID.
        createdAt:
          type: string
          format: date-time
          description: Date the Cloud API first received bike data from the Flow app.
        serviceDue:
          type: object
          properties:
            date:
              type: string
              format: date-time
              description: Point in time in UTC after service is due. Set to `null` if value is not available.
              nullable: true
            odometer:
              type: number
              format: float
              minimum: 0
              description: The odometer value in kilometers after which service is due. Set to `null` if value is not available.
              nullable: true
        driveUnit:
          $ref: '#/components/schemas/DriveUnit'
        remoteControl:
          $ref: '#/components/schemas/RemoteControl'
        batteries:
          type: array
          description: Batteries of a bike.
          items:
            $ref: '#/components/schemas/Battery'
        antiLockBrakeSystems:
          type: array
          items:
            $ref: '#/components/schemas/AntiLockBrakeSystem'
        connectModule:
          $ref: '#/components/schemas/ConnectModule'
        headUnit:
          $ref: '#/components/schemas/HeadUnit'
      required:
        - id
        - createdAt
        - driveUnit
        - remoteControl
      x-stoplight:
        id: 3cx695q5avezp
    BaseComponent:
      title: BaseComponent
      type: object
      properties:
        productName:
          type: string
        serialNumber:
          type: string
          description: ''
        partNumber:
          type: string
      required:
        - serialNumber
        - partNumber
      x-stoplight:
        id: 9p1l4urs8wwft
    DriveUnit:
      allOf:
        - $ref: '#/components/schemas/BaseComponent'
        - type: object
          properties:
            odometer:
              type: number
              format: float
              minimum: 0
              description: The total distance in kilometers.
      x-stoplight:
        id: 7dpio3s5uokl9
    RemoteControl:
      title: RemoteControl
      description: Remote Control (also known as Thumb Controller). Used to allow riders to control the eBike settings without a third-party device.
      allOf:
        - $ref: '#/components/schemas/BaseComponent'
      x-stoplight:
        id: bj713tqeadjit
    Battery:
      allOf:
        - $ref: '#/components/schemas/BaseComponent'
        - type: object
          properties:
            chargeCycles:
              type: object
              required:
                - total
                - onBike
                - offBike
              properties:
                total:
                  type: number
                  format: float
                  description: The total number of full charge cycles.
                  minimum: 0
                onBike:
                  type: number
                  format: float
                  description: The number of full charge cycles of the battery while charging on bike.
                  minimum: 0
                offBike:
                  type: number
                  format: float
                  description: The number of full charge cycles of the battery while charging stand-alone/off bike.
                  minimum: 0
      title: Battery
      description: 'Bike battery (e.g., Bosch rechargeable lithium-ion battery). May include intelligent Battery Management System. A long-life energy source for the eBike. Accessible as PowerPack, PowerTube or DualBattery.'
      x-stoplight:
        id: i978ooter9yjg
    AntiLockBrakeSystem:
      title: AntiLockBrakeSystem
      description: Anti-lock Braking System (Commonly abbreviated as "ABS"). Stands for more riding safety while enabling controlled and stable braking even under difficult conditions.
      allOf:
        - $ref: '#/components/schemas/BaseComponent'
      x-examples: {}
      x-stoplight:
        id: eif6vjwrix7p6
    ConnectModule:
      title: ConnectModule
      description: Bosch Connect Module (Hardware component to send telemetry data from the eBike without relying on a smartphone for internet connection).
      allOf:
        - $ref: '#/components/schemas/BaseComponent'
      x-stoplight:
        id: qab7kl9ji74p6
    HeadUnit:
      title: HeadUnit
      description: Head Unit (display on the eBike to allow riding without needing a smartphone).
      allOf:
        - $ref: '#/components/schemas/BaseComponent'
      x-stoplight:
        id: psr02iewroz9j
    Problem:
      type: object
      title: Problem
      properties:
        type:
          type: string
          format: uri-reference
          description: |
            A URI reference that uniquely identifies the problem type only in the context of the provided API. Opposed to the specification in RFC-7807, it is neither recommended to be dereferenceable and point to a human-readable documentation nor globally unique for the problem type.
          default: 'about:blank'
          example: /some/uri-reference
        title:
          type: string
          description: |
            A short summary of the problem type. Written in English and readable for engineers, usually not suited for non technical stakeholders and not localized.
          example: some title for the error situation
        status:
          type: integer
          format: int32
          description: |
            The HTTP status code generated by the origin server for this occurrence of the problem.
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
        detail:
          type: string
          description: |
            A human readable explanation specific to this occurrence of the problem that is helpful to locate the problem and give advice on how to proceed. Written in English and readable for engineers, usually not suited for non technical stakeholders and not localized.
          example: some description for the error situation
        instance:
          type: string
          format: uri-reference
          description: |
            A URI reference that identifies the specific occurrence of the problem, e.g. by adding a fragment identifier or sub-path to the problem type. May be used to locate the root of this problem in the source code.
          example: /some/uri-reference#specific-occurrence-context
        requestId:
          type: string
          format: uuid
          description: UUID for this specific request for the support
          example: 075be661-d3a4-460b-98de-e5d66849dd5e
      required:
        - type
        - detail
        - requestId
      x-stoplight:
        id: nx778gl5i3ld2
  securitySchemes:
    SingleKeyID:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://p9.authz.bosch.com/auth/realms/obc/protocol/openid-connect/auth'
          tokenUrl: 'https://p9.authz.bosch.com/auth/realms/obc/protocol/openid-connect/token'
          refreshUrl: 'https://p9.authz.bosch.com/auth/realms/obc/protocol/openid-connect/token'
          scopes:
            'cloud-api:bike:read': Enables reading eBike data.
            offline_access: Use this optional scope to request an offline token instead of a refresh token. The client application is responsible for securely persisting the offline token. The offline token never expires as long as it is used for a refresh token action at least once every 180 days.
      description: |-
        Bosch Identity & Access Management

        **Offline Access:** Client applications may use [offline_access](https://openid.net/specs/openid-connect-core-1_0.html#OfflineAccess) tokens instead of refresh tokens. See the scope description below.
  responses:
    '401':
      description: Unauthorized
      content:
        text/plain:
          schema:
            type: string
          examples:
            access-token-expired:
              value: JWT is expired
            access-token-validation-failed:
              value: JWT verification fails
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
    '403':
      description: Forbidden
      content:
        text/plain:
          schema:
            type: string
          examples:
            access-token-missing:
              value: 'RBAC: access denied'
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
    '500':
      description: Internal Server Error
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          examples:
            internal-server-error:
              value:
                detail: an unexpected error occured
                requestId: 798a1836-ee1a-4a39-b9e4-3f6425135bbe
                type: /internal-server-error
  parameters: {}
  examples: {}
tags:
  - name: Bikes
  - name: Health
    x-internal: true
security:
  - SingleKeyID:
      - 'cloud-api:bike:read'
